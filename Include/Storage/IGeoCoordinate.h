///////////////////////////////////////////////////////////////////////////////////////////////////
/// @file View\IGeoCoordinate.h.
///
/// NDE file domain path Not available in NDE
/// 
/// Declares the IGeoCoordinate interface
///////////////////////////////////////////////////////////////////////////////////////////////////
#pragma once
#include <memory>


namespace Olympus
{
  namespace FileManagement
  {
    class IGeoCoordinate
    {
    public:
      virtual ~IGeoCoordinate() = default;
   
      /////////////////////////////////////////////////////////////////////////////////////////////
      /// Latitude
      ///
      /// NDE file domain path Not available in NDE
      /// 
      /// @returns Latitude
      /////////////////////////////////////////////////////////////////////////////////////////////
      virtual double GetLatitude() = 0;

      /////////////////////////////////////////////////////////////////////////////////////////////
      /// Longitude
      ///
      /// NDE file domain path Not available in NDE
      /// 
      /// @returns Longitude
      /////////////////////////////////////////////////////////////////////////////////////////////
      virtual double GetLongitude() = 0;

      /////////////////////////////////////////////////////////////////////////////////////////////
      /// Latitude
      ///
      /////////////////////////////////////////////////////////////////////////////////////////////
      virtual void SetLatitude(double) = 0;

      /////////////////////////////////////////////////////////////////////////////////////////////
      /// Longitude
      ///
      /////////////////////////////////////////////////////////////////////////////////////////////
      virtual void SetLongitude(double) = 0;
    };

    using IGeoCoordinatePtr = std::shared_ptr<IGeoCoordinate>;
    using IGeoCoordinateConstPtr = std::shared_ptr<const IGeoCoordinate>;
  }
}