////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file IDataAxis.h.
///
/// Description of a data axis
////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once
#include <memory>

namespace Olympus {
  namespace Ultrasound {
    namespace Data
    {
      enum class DataUnit { Nanosecond, Millimeter, Degree, Percent, Decibel, Sample };

      class IDataAxis
      {
      public:
        virtual ~IDataAxis() = default;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// Gets the minimum value of the axis, in the unit defined by GetUnit()
        ///
        /// @returns  The minimum value.
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        virtual double GetMin() const = 0;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// Gets the maximum value of the axis, in the unit defined by GetUnit()
        ///
        /// @returns  The maximum value.
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        virtual double GetMax() const = 0;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// Gets the resolution of the axis, in the unit defined by GetUnit(). (Max-Min)/Resolution gives the
        /// quantity of steps of the axis
        ///
        /// @returns  The resolution
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        virtual double GetResolution() const = 0;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// Gets the unit of the axis
        ///
        /// @returns  The Unit
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        virtual DataUnit GetUnit() const = 0;
      };

      using IDataAxisConstPtr = std::shared_ptr<const IDataAxis>;
    }
  }
}
