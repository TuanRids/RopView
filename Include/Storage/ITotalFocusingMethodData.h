////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file ITotalFocusingMethodData.h.
///
/// Declares the ITotalFocusingMethodData interface
////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once
#include <memory>


namespace Olympus {
  namespace Ultrasound {
    namespace Data
    {
      class ITotalFocusingMethodData
      {
      public:
        virtual ~ITotalFocusingMethodData() = default;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        ///  Gets the data array of the column. The exact type of the pointer is defined by 
        ///  IReadOnlyTotalFocusingMethodBuffer::GetDataType(). The axis to ITotalFocusingMethodBufferDescriptor::GetAmplitudeAxis
        ///   provides the minimum and maximum values of each data point.
        ///
        /// @returns  Null if no data, else the data.
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        virtual const void* GetData() const = 0;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// Query if data has been written.
        ///
        /// @returns  True is data is available.
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        virtual bool HasData() const = 0;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// Query if data are saturated.
        ///
        /// @returns  True if data are saturated.
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        virtual bool IsSaturated() const = 0;
      };

      using ITotalFocusingMethodDataConstPtr = std::shared_ptr<const ITotalFocusingMethodData>;
    }
  }
}
