///////////////////////////////////////////////////////////////////////////////////////////////////
/// @file Inspection\IFormationCompound.h.
///
/// Declares the IFormationCompound interface
///////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once
#include <memory>

namespace Olympus { namespace Inspection {

  class IFormationCompound : public IFormation
  {
  public:
    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Destructor
    /////////////////////////////////////////////////////////////////////////////////////////////
    virtual ~IFormationCompound() = default;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Gets the angle refracted primary.
    ///
    /// @returns The angle refracted primary.
    /////////////////////////////////////////////////////////////////////////////////////////////
#pragma warning(suppress : 4996)
    __declspec(deprecated("Deprecated. Use GetAngleRefracted")) virtual IAngleRangePtr GetAngleRefractedPrimary() const = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Sets an angle refracted primary.
    ///
    /// @param angleRefractedPrimary The angle refracted primary.
    /////////////////////////////////////////////////////////////////////////////////////////////
#pragma warning(suppress : 4996)
    __declspec(deprecated("Deprecated. Use SetRefractedAngle")) virtual void SetAngleRefractedPrimary(IAngleRangePtr angleRefractedPrimary) = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Gets the angle refracted secondary.
    ///
    /// @returns The angle refracted secondary.
    /////////////////////////////////////////////////////////////////////////////////////////////
#pragma warning(suppress : 4996)
    __declspec(deprecated("Deprecated. Use GetSkewAngle")) virtual IAngleRangePtr GetAngleRefractedSecondary() const = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Sets an angle refracted secondary.
    ///
    /// @param angleRefractedSecondary The angle refracted secondary.
    /////////////////////////////////////////////////////////////////////////////////////////////
#pragma warning(suppress : 4996)
    __declspec(deprecated("Deprecated. Use SetSkewAngle")) virtual void SetAngleRefractedSecondary(IAngleRangePtr angleRefractedSecondary) = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Gets the step element.
    ///
    /// @returns The step element.
    /////////////////////////////////////////////////////////////////////////////////////////////
    //virtual int GetStepElement() const = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Sets a step element.
    ///
    /// @param stepElement The step element.
    /////////////////////////////////////////////////////////////////////////////////////////////
    //virtual void SetStepElement(int stepElement) = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Gets the first element of first law.
    /// 
    /// NDE file domain path "dataGroups"[index] / "ultrasound" / "compoundPulseEcho" / "probeFirstElementId"
    ///
    /// @returns The first element of first law.
    /////////////////////////////////////////////////////////////////////////////////////////////
    virtual int GetFirstElementOfFirstLaw() const = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Sets a first element of first law.
    /// 
    /// NDE file domain path "dataGroups"[index] / "ultrasound" / "compoundPulseEcho" / "probeFirstElementId"
    ///
    /// @param firstElementOfFirstLaw The first element of first law.
    /////////////////////////////////////////////////////////////////////////////////////////////
    virtual void SetFirstElementOfFirstLaw(int firstElementOfFirstLaw) = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Gets the last element of last law.
    ///
    /// NDE file domain path "dataGroups"[index] / "ultrasound" / "compoundPulseEcho" / "probeLastElementId"
    ///
    /// @returns The last element of last law.
    /////////////////////////////////////////////////////////////////////////////////////////////
    virtual int GetLastElementOfLastLaw() const = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Sets a last element of last law.
    ///
    /// NDE file domain path "dataGroups"[index] / "ultrasound" / "compoundPulseEcho" / "probeLastElementId"
    ///
    /// @param lastElementOfLastLaw The last element of last law.
    /////////////////////////////////////////////////////////////////////////////////////////////
    virtual void SetLastElementOfLastLaw(int lastElementOfLastLaw) = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Gets the refracted angle range.
    ///
    /// NDE file domain path "dataGroups"[index] / "ultrasound" / "compoundPulseEcho" / "beamRefractedAngles"
    /// 
    /// @returns The refracted angle range.
    /////////////////////////////////////////////////////////////////////////////////////////////
    virtual IAngleRangePtr GetRefractedAngle() const = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Sets the refracted angle rnage.
    ///
    /// NDE file domain path "dataGroups"[index] / "ultrasound" / "compoundPulseEcho" / "beamRefractedAngles"
    /// 
    /// @param The refracted angle range.
    /////////////////////////////////////////////////////////////////////////////////////////////
    virtual void SetRefractedAngle(IAngleRangePtr refractedAngleRange) = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Gets the skew angle.
    ///
    /// NDE file domain path "dataGroups"[index] / "ultrasound" / "compoundPulseEcho" / "beams"[index] / "skewAngle"
    ///
    /// @returns The skew angle.
    /////////////////////////////////////////////////////////////////////////////////////////////
    virtual IAngleRangePtr GetSkewAngle() const = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Sets the Skew angle.
    ///
    /// NDE file domain path "dataGroups"[index] / "ultrasound" / "compoundPulseEcho" / "beams"[index] / "skewAngle"
    ///
    /// @param Skew angle range.
    /////////////////////////////////////////////////////////////////////////////////////////////
    virtual void SetSkewAngle(IAngleRangePtr skewAngleRange) = 0;
  };

  using IFormationCompoundPtr = std::shared_ptr<IFormationCompound>;
  using IFormationCompoundConstPtr = std::shared_ptr<const IFormationCompound>;
}}
