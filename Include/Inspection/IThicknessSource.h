///////////////////////////////////////////////////////////////////////////////////////////////////
/// @file Inspection\IThicknessSource.h.
///
/// Declares the IThicknessSource interface
///////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once
#include <memory>
#include <Inspection/IThicknessGate.h>

namespace Olympus {
  namespace Inspection {

  class IThicknessSource
  {
  public:
    virtual ~IThicknessSource() = default;

    ///////////////////////////////////////////////////////////////////////////////////////////////////
    /// Gets the first thickness gate
    ///
    /// @returns the first thickness gate.
    ///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual IThicknessGatePtr GetFirstGate() const = 0;

    ///////////////////////////////////////////////////////////////////////////////////////////////////
    /// Gets the second thickness gate
    ///
    /// @returns the second thickness gate if the thickness source was created with.
    ///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual IThicknessGatePtr GetSecondGate() const = 0;
  };

  using IThicknessSourcePtr = std::shared_ptr<IThicknessSource>;
  using IThicknessSourceConstPtr = std::shared_ptr<const IThicknessSource>;
}}
