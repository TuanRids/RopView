///////////////////////////////////////////////////////////////////////////////////////////////////
/// @file IFocusingLimits.h.
///
/// Declares the IFocusingLimits interface
///////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once
#include <memory>

namespace Olympus {
  namespace Inspection
  {
    class IFocusingLimits
    {
    public:
      virtual ~IFocusingLimits() = default;

      ////////////////////////////////////////////////////////////////////////////////////////////////////
      /// Gets the minimum value of the axis in mm.
      ///
      /// NDE file domain path "dataGroups"[index] / "ultrasound" / "fullMatrixCapture" / "tfmDescription" / "rectangularGrid" / "yImagingLimits" or "zImagingLimits" / "min"
      /// 
      /// @returns  The minimum value.
      ////////////////////////////////////////////////////////////////////////////////////////////////////
      virtual double GetMinimum() const = 0;

      ////////////////////////////////////////////////////////////////////////////////////////////////////
      /// Sets the minimum value of the axis in mm.
      ///
      /// @param minimun The minimum value.
      ////////////////////////////////////////////////////////////////////////////////////////////////////
      virtual void SetMinimum(double minimun) = 0;

      ////////////////////////////////////////////////////////////////////////////////////////////////////
      /// Gets the maximum value of the axis in mm.
      ///
      /// NDE file domain path "dataGroups"[index] / "ultrasound" / "fullMatrixCapture" / "tfmDescription" / "rectangularGrid" / "yImagingLimits" or "zImagingLimits" / "max"
      /// 
      /// @returns  The maximum value.
      ////////////////////////////////////////////////////////////////////////////////////////////////////
      virtual double GetMaximum() const = 0;

      ////////////////////////////////////////////////////////////////////////////////////////////////////
      /// Sets the maximum value of the axis in mm.
      ///
      /// @param maximum The maximum value.
      ////////////////////////////////////////////////////////////////////////////////////////////////////
      virtual void SetMaximum(double maximum) = 0;

      ////////////////////////////////////////////////////////////////////////////////////////////////////
      /// Gets the resolution value of the axis in mm.
      ///
      /// NDE file domain path "dataGroups"[index] / "ultrasound" / "fullMatrixCapture" / "tfmDescription" / "rectangularGrid" / "yImagingLimits" or "zImagingLimits" / "resolution"
      /// 
      /// @returns  The resolution value.
      ////////////////////////////////////////////////////////////////////////////////////////////////////
      virtual double GetResolution() const = 0;

      ////////////////////////////////////////////////////////////////////////////////////////////////////
      /// Sets the resolution value of the axis in mm.
      ///
      /// @param resolution The resolution value.
      ////////////////////////////////////////////////////////////////////////////////////////////////////
      virtual void SetResolution(double resolution) = 0;
    };

    using IFocusingLimitsPtr = std::shared_ptr<IFocusingLimits>;
    using IFocusingLimitsConstPtr = std::shared_ptr<const IFocusingLimits>;
  }
}
