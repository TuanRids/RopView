///////////////////////////////////////////////////////////////////////////////////////////////////
/// @file Inspection\IFormationSectorial.h.
///
/// Declares the IFormationSectorial interface
///////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once
#include <memory>

namespace Olympus { namespace Inspection {

  class IFormationSectorial : public IFormation
  {
  public:
    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Destructor
    /////////////////////////////////////////////////////////////////////////////////////////////
    virtual ~IFormationSectorial() = default;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Gets the angle refracted primary.
    ///
    /// @returns The angle refracted primary.
    /////////////////////////////////////////////////////////////////////////////////////////////
#pragma warning(suppress : 4996)
    __declspec(deprecated("Deprecated. Use GetAngleRefracted")) virtual IAngleRangePtr GetAngleRefractedPrimary() const = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Sets an angle refracted primary.
    ///
    /// @param angleRefractedPrimary The angle refracted primary.
    /////////////////////////////////////////////////////////////////////////////////////////////
#pragma warning(suppress : 4996)
    __declspec(deprecated("Deprecated. Use SetRefractedAngle")) virtual void SetAngleRefractedPrimary(IAngleRangePtr angleRefractedPrimary) = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Gets the angle refracted secondary.
    ///
    /// @returns The angle refracted secondary.
    /////////////////////////////////////////////////////////////////////////////////////////////
#pragma warning(suppress : 4996)
    __declspec(deprecated("Deprecated. Use GetSkewAngle")) virtual IAngleRangePtr GetAngleRefractedSecondary() const = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Sets an angle refracted secondary.
    ///
    /// @param angleRefractedSecondary The angle refracted secondary.
    /////////////////////////////////////////////////////////////////////////////////////////////
#pragma warning(suppress : 4996)
    __declspec(deprecated("Deprecated. Use SetSkewAngle")) virtual void SetAngleRefractedSecondary(IAngleRangePtr angleRefractedSecondary) = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Gets the first element of first law.
    /// 
    /// NDE file domain path "dataGroups"[index] / "ultrasound" / "sectorialPulseEcho" / "probeFirstElementId"
    ///
    /// @returns The first element of first law.
    /////////////////////////////////////////////////////////////////////////////////////////////
    virtual int GetFirstElementOfFirstLaw() const = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Sets a first element of first law.
    /// 
    /// NDE file domain path "dataGroups"[index] / "ultrasound" / "sectorialPulseEcho" / "probeFirstElementId"
    /// 
    /// @param firstElementOfFirstLaw The first element of first law.
    /////////////////////////////////////////////////////////////////////////////////////////////
    virtual void SetFirstElementOfFirstLaw(int firstElementOfFirstLaw) = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Gets the number of element secondary axis.
    ///
    /// NDE file domain path Not available in NDE format
    /// 
    /// @returns The number of element secondary axis.
    /////////////////////////////////////////////////////////////////////////////////////////////
    virtual int GetNumberOfElementSecondaryAxis() const = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Sets a number of element secondary axis.
    ///
    /// @param numberOfElementSecondaryAxis Number of element secondary axis.
    /////////////////////////////////////////////////////////////////////////////////////////////
    virtual void SetNumberOfElementSecondaryAxis(int numberOfElementSecondaryAxis) = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Gets the refracted angle range.
    ///
    /// NDE file domain path "dataGroups"[index] / "ultrasound" / "sectorialPulseEcho" / "beamRefractedAngles"
    /// 
    /// @returns The refracted angle range.
    /////////////////////////////////////////////////////////////////////////////////////////////
    virtual IAngleRangePtr GetRefractedAngle() const = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Sets the refracted angle rnage.
    ///
    /// NDE file domain path "dataGroups"[index] / "ultrasound" / "sectorialPulseEcho" / "beamRefractedAngles"
    /// 
    /// @param The refracted angle range.
    /////////////////////////////////////////////////////////////////////////////////////////////
    virtual void SetRefractedAngle(IAngleRangePtr refractedAngleRange) = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Gets the skew angle.
    ///
    /// NDE file domain path "dataGroups"[index] / "ultrasound" / "sectorialPulseEcho" / "beams"[index] / "skewAngle"
    ///
    /// @returns The skew angle.
    /////////////////////////////////////////////////////////////////////////////////////////////
    virtual IAngleRangePtr GetSkewAngle() const = 0;

    /////////////////////////////////////////////////////////////////////////////////////////////
    /// Sets the Skew angle.
    ///
    /// NDE file domain path "dataGroups"[index] / "ultrasound" / "sectorialPulseEcho" / "beams"[index] / "skewAngle"
    ///
    /// @param Skew angle range.
    /////////////////////////////////////////////////////////////////////////////////////////////
    virtual void SetSkewAngle(IAngleRangePtr skewAngleRange) = 0;
  };

  using IFormationSectorialPtr = std::shared_ptr<IFormationSectorial>;
  using IFormationSectorialConstPtr = std::shared_ptr<const IFormationSectorial>;
}}
