///////////////////////////////////////////////////////////////////////////////////////////////////
/// @file Inspection\IInspectionMethodCollection.h.
///
/// Declares the IInspectionMethodCollection interface
///////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once
#include <memory>
#include <string>

namespace Olympus { namespace Inspection {

  class IInspectionMethodCollection
  {
  public:

    virtual ~IInspectionMethodCollection() = default;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Searches for the first inspection method.
    ///
    /// @param name The name.
    ///
    /// @return
    /// The found inspection method.
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual IInspectionMethodPtr FindInspectionMethod(const std::wstring& name) = 0;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Searches for the first inspection method.
    ///
    /// @param name The name.
    ///
    /// @return The found inspection method.
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual IInspectionMethodConstPtr FindInspectionMethod(const std::wstring& name) const = 0;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Gets an inspection method.
    ///
    /// @param index Zero-based index of the.
    ///
    /// @return
    /// The inspection method.
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual IInspectionMethodPtr GetInspectionMethod(std::size_t index) = 0;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Gets an inspection method.
    ///
    /// @param index Zero-based index of the.
    ///
    /// @return The inspection method.
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual IInspectionMethodConstPtr GetInspectionMethod(std::size_t index) const = 0;

    virtual void RemoveInspectionMethod(std::size_t index) = 0;
    virtual void RemoveInspectionMethod(const std::wstring& name) = 0;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Gets the count.
    ///
    /// @return
    /// The count.
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual std::size_t GetCount() const = 0;
  };

  using IInspectionMethodCollectionPtr = std::shared_ptr<IInspectionMethodCollection>;
  using IInspectionMethodCollectionConstPtr = std::shared_ptr<const IInspectionMethodCollection>;
}}
