////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file ultrasoundConfiguration/IDigitalInputPinCollection.h
///
/// Declares the IDigitalInputPinCollection interface.
////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma once
#include <instrumentation/InstrumentationTypes.h>
#include <ultrasoundConfiguration/UltrasoundTypes.h>

namespace Instrumentation
{
  class IDigitalInputPin;

  ////////////////////////////////////////////////////////////////////////////////////////////////////
  /// IBeamSetBinder::BindBeamSetToConventional.
  ////////////////////////////////////////////////////////////////////////////////////////////////////
  class IDigitalInputPinCollection
  {
  public:
    virtual ~IDigitalInputPinCollection() = default;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Get the number of interfaces IDigitalInputPinCollection in this collection.
    ///
    /// @return
    /// The count of the digital Input pin collection.
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual std::size_t GetCount() const = 0;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Get the interface IDigitalInputPinCollection at the index given.
    ///
    /// @param index The position of the desired IDigitalInputPinCollection.
    /// @return
    /// The interface IDigitalInputPinCollection desired.
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual std::shared_ptr<IDigitalInputPin> GetPin(std::size_t index) const = 0;

  };

  using IDigitalInputPinCollectionPtr = std::shared_ptr<IDigitalInputPinCollection>;
  using IDigitalInputPinCollectionConstPtr = std::shared_ptr<const IDigitalInputPinCollection>;
}
