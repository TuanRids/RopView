#pragma once
#include <memory>
#include <string>

///////////////////////////////////////////////////////////////////////////////////////////////////
/// @file instrumentation/IDeviceNetworkInfo.h
///
/// Declares the IDeviceNetworkInfo interface.
///////////////////////////////////////////////////////////////////////////////////////////////////
namespace Instrumentation
{
  /////////////////////////////////////////////////////////////////////////////////////////////////
  /// Interface which gives information on the configurated adapter (selected adapter in
  /// ConfigTool application).
  /////////////////////////////////////////////////////////////////////////////////////////////////
  class IDeviceNetworkInfo
  {
  public:
    virtual ~IDeviceNetworkInfo() = default;

    ///////////////////////////////////////////////////////////////////////////////////////////////
    /// Get the IPv4 address of the adapter connected to the devices
    ///
    /// @return
    /// The IPv4 address of the adapter. The string is empty if the IP address is not found.
    ///////////////////////////////////////////////////////////////////////////////////////////////
    virtual const std::string& GetAdapterIpAddress() const = 0;
  };

  using IDeviceNetworkInfoPtr = std::shared_ptr<IDeviceNetworkInfo>;
  using IDeviceNetworkInfoConstPtr = std::shared_ptr<const IDeviceNetworkInfo>;
}
