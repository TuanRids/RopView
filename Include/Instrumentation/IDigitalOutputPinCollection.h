////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file ultrasoundConfiguration/IDigitalOutputPinCollection.h
///
/// Declares the IDigitalOutputPinCollection interface.
////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma once
#include <instrumentation/InstrumentationTypes.h>
#include <ultrasoundConfiguration/UltrasoundTypes.h>

namespace Instrumentation
{
  class IDigitalOutputPin;

  ////////////////////////////////////////////////////////////////////////////////////////////////////
  /// 
  ////////////////////////////////////////////////////////////////////////////////////////////////////
  class IDigitalOutputPinCollection
  {
  public:
    virtual ~IDigitalOutputPinCollection() = default;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Get the number of interfaces IDigitalOutputPinCollection in this collection.
    ///
    /// @return
    /// The count of the digital output pin collection.
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual std::size_t GetCount() const = 0;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Get the interface IDigitalOutputPinCollection at the index given.
    ///
    /// @param index The position of the desired IDigitalOutputPinCollection.
    /// @return
    /// The interface IDigitalOutputPinCollection desired.
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual std::shared_ptr<IDigitalOutputPin> GetPin(std::size_t index) const = 0;

  };

  using IDigitalOutputPinCollectionPtr = std::shared_ptr<IDigitalOutputPinCollection>;
  using IDigitalOutputPinCollectionConstPtr = std::shared_ptr<const IDigitalOutputPinCollection>;
}
