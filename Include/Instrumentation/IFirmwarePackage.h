#pragma once
#include <instrumentation/InstrumentationTypes.h>
#include <ultrasoundConfiguration/UltrasoundTypes.h>
#include <instrumentation/IDeviceInfo.h>


namespace Instrumentation
{
  ////////////////////////////////////////////////////////////////////////////////////////////////////
  /// The interface for a package of a device.
  ///
  ////////////////////////////////////////////////////////////////////////////////////////////////////
  class IFirmwarePackage
  {
  public:
    virtual ~IFirmwarePackage() = default;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Get the name of the package.
    ///
    /// @return
    /// Name of the package.
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual const std::wstring& GetName() const = 0;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Specify if the firmware package can be executed on a specific platform
    ///
    /// @param platform The platform to test on
    /// 
    /// @return
    /// Wheter or not the package can be executed on the platform 
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual bool Support(IDeviceInfo::Platform platform) const = 0;

  };
}
