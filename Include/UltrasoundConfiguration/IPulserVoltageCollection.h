////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file ultrasoundConfiguration/IPulserVoltageCollection.h
///
/// Declares the IPulserVoltageCollection interface.
////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma once
#include <ultrasoundConfiguration/UltrasoundTypes.h>

namespace Instrumentation
{

  ////////////////////////////////////////////////////////////////////////////////////////////////////
  /// Contains the collection of pulser voltages supported for the associated technology. These
  /// pulser voltage can be assigned to a technology using DigitizerTechnology::SetPulserVoltage.
  ////////////////////////////////////////////////////////////////////////////////////////////////////
  class IPulserVoltageCollection
  {
  public:
    virtual ~IPulserVoltageCollection() = default;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Get the number of supported pulser voltages in this collection.
    ///
    /// @return
    /// The count of this collection.
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual std::size_t GetCount() const = 0;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// Get a specific pulser voltage from this collection by giving its index. 
    ///
    /// @param index The index of the desired pulser voltage.
    ///
    /// @return
    /// The corresponding pulser voltage.
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    virtual double GetPulserVoltage(std::size_t index) const = 0;
  };

  using IPulserVoltageCollectionPtr = std::shared_ptr<IPulserVoltageCollection>;
  using IPulserVoltageCollectionConstPtr = std::shared_ptr<const IPulserVoltageCollection>;
}
